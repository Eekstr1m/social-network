{"version":3,"file":"static/js/737.d4d42704.chunk.js","mappings":"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","sources":["webpack://my-app/./src/Components/Login/Login.module.scss?f8f8","Components/Login/Login.jsx"],"sourcesContent":["// extracted by mini-css-extract-plugin\nexport default {\"form\":\"Login_form__4DPxS\",\"form_error\":\"Login_form_error__9kTma\",\"text_input_area\":\"Login_text_input_area__EcSFc\",\"text_input\":\"Login_text_input__qRjMn\",\"text_label\":\"Login_text_label__WQIAK\",\"checkbox_input\":\"Login_checkbox_input__bjvy-\",\"checkbox\":\"Login_checkbox__8z80T\",\"submit_place\":\"Login_submit_place__pYJGt\",\"submit\":\"Login_submit__B+Lcn\",\"error\":\"Login_error__4MQn6\"};","import { Form, Formik, useField } from \"formik\";\r\nimport React, { useContext } from \"react\";\r\nimport * as Yup from \"yup\";\r\nimport { API } from \"../../API/api\";\r\nimport { AuthUserDataContext } from \"../../App\";\r\nimport c from \"./Login.module.scss\";\r\n\r\nfunction Login() {\r\n  const { setIsChanged } = useContext(AuthUserDataContext);\r\n  return <LoginForm setIsChanged={setIsChanged} />;\r\n}\r\n\r\nexport default Login;\r\n\r\nconst MyTextInput = ({ label, ...props }) => {\r\n  const [field, meta] = useField(props);\r\n\r\n  return (\r\n    <div className={c.text_input_area}>\r\n      <label htmlFor={props.id || props.name} className={c.text_label}>\r\n        {label}\r\n      </label>\r\n      <input className={c.text_input} {...field} {...props} />\r\n      {meta.touched && meta.error ? (\r\n        <div className={c.error}>{meta.error}</div>\r\n      ) : null}\r\n    </div>\r\n  );\r\n};\r\n\r\nconst MyCheckbox = ({ children, ...props }) => {\r\n  const [field, meta] = useField({ ...props, type: \"checkbox\" });\r\n\r\n  return (\r\n    <>\r\n      <label className={c.checkbox}>\r\n        <input\r\n          {...field}\r\n          {...props}\r\n          type=\"checkbox\"\r\n          className={c.checkbox_input}\r\n        />\r\n        {children}\r\n      </label>\r\n      {meta.touched && meta.error ? (\r\n        <div className=\"error\">{meta.error}</div>\r\n      ) : null}\r\n    </>\r\n  );\r\n};\r\n\r\nconst LoginForm = ({ setIsChanged }) => {\r\n  let onSubmitHandler = (values, { setSubmitting, setStatus, resetForm }) => {\r\n    API.login(values.email, values.password, values.rememberMe).then((res) => {\r\n      if (res.resultCode === 0) {\r\n        setIsChanged();\r\n      } else {\r\n        resetForm();\r\n        setStatus(res.messages);\r\n      }\r\n    });\r\n    setSubmitting(false);\r\n  };\r\n\r\n  return (\r\n    <div className={c.form}>\r\n      <h1>Log In</h1>\r\n      <Formik\r\n        initialValues={{\r\n          email: \"\",\r\n          password: \"\",\r\n          rememberMe: false,\r\n        }}\r\n        validationSchema={Yup.object({\r\n          email: Yup.string()\r\n            .email(\"Invalid email address`\")\r\n            .required(\"Required\"),\r\n          password: Yup.string().required(\"Required\"),\r\n        })}\r\n        onSubmit={onSubmitHandler}\r\n      >\r\n        {({ isSubmitting, status }) => (\r\n          <Form>\r\n            {status && <div className={c.form_error}>{status}</div>}\r\n            <MyTextInput\r\n              label=\"Email Address\"\r\n              name=\"email\"\r\n              type=\"email\"\r\n              placeholder=\"email@address.com\"\r\n            />\r\n            <MyTextInput\r\n              label=\"Password\"\r\n              name=\"password\"\r\n              type=\"password\"\r\n              placeholder=\"Password\"\r\n            />\r\n            <MyCheckbox name=\"rememberMe\">Stay signed</MyCheckbox>\r\n\r\n            <div className={c.submit_place}>\r\n              <button\r\n                disabled={isSubmitting}\r\n                className={c.submit}\r\n                type=\"submit\"\r\n              >\r\n                Submit\r\n              </button>\r\n            </div>\r\n          </Form>\r\n        )}\r\n      </Formik>\r\n    </div>\r\n  );\r\n};\r\n"],"names":["setIsChanged","useContext","AuthUserDataContext","_jsx","LoginForm","MyTextInput","_ref","label","props","_objectWithoutProperties","_excluded","_useField","useField","_useField2","_slicedToArray","field","meta","_jsxs","className","c","children","htmlFor","id","name","_objectSpread","touched","error","MyCheckbox","_ref2","_excluded2","_useField3","type","_useField4","_Fragment","_ref3","Formik","initialValues","email","password","rememberMe","validationSchema","Yup","required","onSubmit","values","_ref4","setSubmitting","setStatus","resetForm","API","then","res","resultCode","messages","_ref5","isSubmitting","status","Form","placeholder","disabled"],"sourceRoot":""}