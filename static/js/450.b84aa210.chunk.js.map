{"version":3,"file":"static/js/450.b84aa210.chunk.js","mappings":"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","sources":["webpack://my-app/./src/Components/Chat/Chat.module.scss?b897","Components/Chat/Chat.jsx"],"sourcesContent":["// extracted by mini-css-extract-plugin\nexport default {\"chat\":\"Chat_chat__DXAIn\",\"messages\":\"Chat_messages__BQJjj\",\"image\":\"Chat_image__OIphS\",\"messageItem\":\"Chat_messageItem__SzQ4z\",\"message_body\":\"Chat_message_body__jb4nF\",\"userName\":\"Chat_userName__mXuOO\",\"form\":\"Chat_form__Lp8+b\",\"input\":\"Chat_input__GVTbM\",\"submit\":\"Chat_submit__V2FDL\"};","import { Field, Form, Formik } from \"formik\";\r\nimport React, { useCallback, useEffect, useRef, useState } from \"react\";\r\nimport userImage from \"./../../Assets/userImg.png\";\r\nimport c from \"./Chat.module.scss\";\r\n\r\nconst useToggle = (initialState = false) => {\r\n  const [state, setState] = useState(initialState);\r\n  const toggle = useCallback(() => setState((state) => !state), []);\r\n  return [state, toggle];\r\n};\r\n\r\nfunction Chat() {\r\n  const [messages, setMessages] = useState([]);\r\n\r\n  const [wsChannel, setWsChannel] = useState(null);\r\n  const [status, setStatus] = useState(\"pending\");\r\n  const [isReconnect, setIsReconnect] = useToggle();\r\n\r\n  useEffect(() => {\r\n    let socket;\r\n\r\n    const closeHandler = () => {\r\n      console.log(\"close\");\r\n      setStatus(\"pending\");\r\n\r\n      setMessages([]);\r\n    };\r\n\r\n    const openHandler = (e) => {\r\n      console.log(\"connected\");\r\n      setStatus(\"ready\");\r\n    };\r\n\r\n    const messageHandler = (e) => {\r\n      console.log(\"messages\");\r\n      let newMessages = JSON.parse(e.data);\r\n      setMessages((prevMessages) => [...prevMessages, ...newMessages]);\r\n    };\r\n\r\n    const errorHandler = (e) => {\r\n      console.log(\"error\");\r\n    };\r\n\r\n    const EVENT_ADD = \"addEventListener\";\r\n    const EVENT_REMOVE = \"removeEventListener\";\r\n\r\n    const eventListeners = (ws, type) => {\r\n      switch (type) {\r\n        case EVENT_ADD:\r\n          ws.addEventListener(\"open\", openHandler);\r\n          ws.addEventListener(\"message\", messageHandler);\r\n          ws.addEventListener(\"close\", closeHandler);\r\n          ws.addEventListener(\"error\", errorHandler);\r\n          break;\r\n\r\n        case EVENT_REMOVE:\r\n          ws.removeEventListener(\"open\", openHandler);\r\n          ws.removeEventListener(\"message\", messageHandler);\r\n          ws.removeEventListener(\"close\", closeHandler);\r\n          ws.removeEventListener(\"error\", errorHandler);\r\n          break;\r\n\r\n        default:\r\n          break;\r\n      }\r\n    };\r\n\r\n    const createChannel = () => {\r\n      if (wsChannel) {\r\n        eventListeners(wsChannel, EVENT_REMOVE);\r\n        wsChannel.close();\r\n      }\r\n      socket = new WebSocket(\r\n        \"wss://social-network.samuraijs.com/handlers/ChatHandler.ashx\"\r\n      );\r\n\r\n      eventListeners(socket, EVENT_ADD);\r\n      setWsChannel(socket);\r\n    };\r\n\r\n    createChannel();\r\n\r\n    return () => {\r\n      socket.close();\r\n    };\r\n  }, [isReconnect]);\r\n\r\n  return (\r\n    <div className={c.chat}>\r\n      <Messages\r\n        wsChannel={wsChannel}\r\n        messages={messages}\r\n        setIsReconnect={setIsReconnect}\r\n      />\r\n      <SendMessage wsChannel={wsChannel} status={status} />\r\n    </div>\r\n  );\r\n}\r\n\r\nexport default Chat;\r\n\r\nfunction Messages({ wsChannel, messages, setIsReconnect }) {\r\n  const messagesAnchorRef = useRef(null);\r\n\r\n  useEffect(() => {\r\n    if (messagesAnchorRef.current) {\r\n      messagesAnchorRef.current.scrollIntoView({\r\n        behavior: \"smooth\",\r\n        block: \"end\",\r\n      });\r\n    }\r\n  }, [messages]);\r\n\r\n  return (\r\n    <div className={c.messages}>\r\n      {!wsChannel ? (\r\n        <div>\r\n          <div>Connection abort, click button to try reconnect</div>\r\n          <button onClick={() => setIsReconnect()} type=\"submit\">\r\n            Reconnect\r\n          </button>\r\n        </div>\r\n      ) : messages.length ? (\r\n        messages.map((item, i) => <MessageItem key={i} item={item} />)\r\n      ) : (\r\n        <div>No messages</div>\r\n      )}\r\n      <div ref={messagesAnchorRef}></div>\r\n    </div>\r\n  );\r\n}\r\n\r\nfunction MessageItem({ item }) {\r\n  return (\r\n    <div className={c.messageItem}>\r\n      <img src={item.photo || userImage} className={c.image} alt=\"\" />\r\n\r\n      <div className={c.message_body}>\r\n        <div className={c.userName}>{item.userName}</div>\r\n        <div className={c.message}>{item.message}</div>\r\n      </div>\r\n    </div>\r\n  );\r\n}\r\n\r\nfunction SendMessage({ wsChannel, status }) {\r\n  const onSubmitHandler = (values, { setSubmitting, resetForm }) => {\r\n    if (!values.messageText) {\r\n      return;\r\n    }\r\n    wsChannel.send(values.messageText);\r\n    setSubmitting(false);\r\n    resetForm();\r\n  };\r\n\r\n  return (\r\n    <div className={c.form_box}>\r\n      <Formik initialValues={{ messageText: \"\" }} onSubmit={onSubmitHandler}>\r\n        {({ isSubmitting }) => (\r\n          <Form className={c.form}>\r\n            <Field\r\n              type=\"textarea\"\r\n              id=\"messageText\"\r\n              name=\"messageText\"\r\n              placeholder=\"Type message text\"\r\n              className={c.input}\r\n            />\r\n\r\n            <button\r\n              disabled={status !== \"ready\"}\r\n              className={c.submit}\r\n              type=\"submit\"\r\n            >\r\n              Send\r\n            </button>\r\n          </Form>\r\n        )}\r\n      </Formik>\r\n    </div>\r\n  );\r\n}\r\n"],"names":["useToggle","initialState","arguments","length","undefined","_useState","useState","_useState2","_slicedToArray","state","setState","toggle","useCallback","_useState3","_useState4","messages","setMessages","_useState5","_useState6","wsChannel","setWsChannel","_useState7","_useState8","status","setStatus","_useToggle","_useToggle2","isReconnect","setIsReconnect","useEffect","socket","closeHandler","console","log","openHandler","e","messageHandler","newMessages","JSON","parse","data","prevMessages","concat","_toConsumableArray","errorHandler","EVENT_ADD","EVENT_REMOVE","eventListeners","ws","type","addEventListener","removeEventListener","close","WebSocket","_jsxs","className","c","children","_jsx","Messages","SendMessage","_ref","messagesAnchorRef","useRef","current","scrollIntoView","behavior","block","map","item","i","MessageItem","onClick","ref","_ref2","src","photo","userImage","alt","userName","message","_ref3","Formik","initialValues","messageText","onSubmit","values","_ref4","setSubmitting","resetForm","send","_ref5","isSubmitting","Form","Field","id","name","placeholder","disabled"],"sourceRoot":""}