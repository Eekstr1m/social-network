{"version":3,"file":"static/js/521.5c4a57a7.chunk.js","mappings":"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","sources":["webpack://my-app/./src/Components/Messages/Messages.module.scss?59b9","webpack://my-app/./src/Components/Messages/MessagesActiveDialog/DialogBody/DialogBody.module.scss?cdff","webpack://my-app/./src/Components/Messages/MessagesActiveDialog/DialogBody/MessagesBody/MessagesBody.module.scss?dd47","Components/Messages/MessagesActiveDialog/DialogBody/MessagesBody/MessagesBody.jsx","Components/Messages/MessagesActiveDialog/DialogBody/DialogBody.jsx","webpack://my-app/./src/Components/Messages/MessagesActiveDialog/DialogHeader/DialogHeader.module.scss?374c","Components/Messages/MessagesActiveDialog/DialogHeader/DialogHeader.jsx","webpack://my-app/./src/Components/Messages/MessagesActiveDialog/DialogSendMessage/DialogSendMessage.module.scss?3cc1","Components/Messages/MessagesActiveDialog/DialogSendMessage/DialogSendMessage.jsx","webpack://my-app/./src/Components/Messages/MessagesActiveDialog/MessagesActiveDialog.module.scss?439a","Components/Messages/MessagesActiveDialog/MessagesActiveDialog.jsx","webpack://my-app/./src/Components/Messages/MessagesDialogs/MessagesDialogs.module.scss?cac1","webpack://my-app/./src/Components/Messages/MessagesDialogs/User/User.module.scss?73c5","Components/Messages/MessagesDialogs/User/User.jsx","Components/Messages/MessagesDialogs/MessagesDialogs.jsx","Components/Messages/Messages.jsx"],"sourcesContent":["// extracted by mini-css-extract-plugin\nexport default {\"messages\":\"Messages_messages__6bLcq\"};","// extracted by mini-css-extract-plugin\nexport default {\"dialog\":\"DialogBody_dialog__Fr21p\",\"no_messages\":\"DialogBody_no_messages__Yuu+K\",\"dialog_messages\":\"DialogBody_dialog_messages__nGOGr\"};","// extracted by mini-css-extract-plugin\nexport default {\"message\":\"MessagesBody_message__E2Uco\",\"myMessage\":\"MessagesBody_myMessage__5EiAc\",\"message__wrapper\":\"MessagesBody_message__wrapper__kwo4e\",\"message__body\":\"MessagesBody_message__body__z3bbE\",\"message__time\":\"MessagesBody_message__time__+G2JH\",\"message__content\":\"MessagesBody_message__content__My63t\"};","import React from \"react\";\r\nimport c from \"./MessagesBody.module.scss\";\r\n\r\nexport default function MessagesBody({ item, authUserData }) {\r\n  let date = new Date(item.addedAt);\r\n\r\n  let hour = date.getHours() + 2;\r\n  hour = hour < 10 ? `0${hour}` : `${hour}`;\r\n\r\n  let min = date.getMinutes();\r\n  min = min < 10 ? `0${min}` : `${min}`;\r\n\r\n  let sendedTime = `${hour}:${min}`;\r\n\r\n  return (\r\n    <div\r\n      className={\r\n        authUserData.id === item.senderId\r\n          ? `${c.message} ${c.myMessage}`\r\n          : `${c.message}`\r\n      }\r\n    >\r\n      <div className={c.message__wrapper}>\r\n        <div className={c.message__content}>\r\n          <span className={c.message__body}>{item.body}</span>\r\n          <span className={c.message__time}>{sendedTime}</span>\r\n        </div>\r\n      </div>\r\n    </div>\r\n  );\r\n}\r\n","import React, { useEffect, useRef } from \"react\";\r\nimport c from \"./DialogBody.module.scss\";\r\nimport MessagesBody from \"./MessagesBody/MessagesBody\";\r\n\r\nexport default function DialogBody({ dialogData, authUserData }) {\r\n  const newMessageRef = useRef(null);\r\n\r\n  useEffect(() => {\r\n    if (newMessageRef.current) {\r\n      newMessageRef.current.scrollIntoView();\r\n    }\r\n  }, []);\r\n\r\n  useEffect(() => {\r\n    if (newMessageRef.current) {\r\n      newMessageRef.current.scrollIntoView({ behavior: \"smooth\" });\r\n    }\r\n  }, [dialogData]);\r\n\r\n  return (\r\n    <div className={c.dialog}>\r\n      <div className={c.dialog_messages}>\r\n        {dialogData.length ? (\r\n          dialogData.map((item) => (\r\n            <MessagesBody\r\n              key={item.id}\r\n              item={item}\r\n              authUserData={authUserData}\r\n            />\r\n          ))\r\n        ) : (\r\n          <div className={c.no_messages}>\r\n            <div>No messages yet</div>\r\n            <div>Send first one</div>\r\n          </div>\r\n        )}\r\n        <div ref={newMessageRef}></div>\r\n      </div>\r\n    </div>\r\n  );\r\n}\r\n","// extracted by mini-css-extract-plugin\nexport default {\"header_box\":\"DialogHeader_header_box__oeomP\",\"header\":\"DialogHeader_header__Yb7-O\",\"photo_box\":\"DialogHeader_photo_box__0v1-J\",\"photo\":\"DialogHeader_photo__CdVFt\",\"userInfo_box\":\"DialogHeader_userInfo_box__Q4CFy\",\"userInfo_name\":\"DialogHeader_userInfo_name__mE7mL\",\"userInfo_date\":\"DialogHeader_userInfo_date__J46YO\"};","import React from \"react\";\r\nimport { useParams } from \"react-router-dom\";\r\nimport userImg from \"../../../../Assets/userImg.png\";\r\nimport c from \"./DialogHeader.module.scss\";\r\n\r\nconst lastActivity = (lastUserActivityDate) => {\r\n  let now = new Date();\r\n  let date = new Date(lastUserActivityDate);\r\n\r\n  const dayOfWeek = [\r\n    \"Sunday\",\r\n    \"Monday\",\r\n    \"Tuesday\",\r\n    \"Wednesday\",\r\n    \"Thursday\",\r\n    \"Friday\",\r\n    \"Saturday\",\r\n  ];\r\n\r\n  let hour = date.getHours() + 2;\r\n  hour = hour < 10 ? `0${hour}` : `${hour}`;\r\n\r\n  let min = date.getMinutes();\r\n  min = min < 10 ? `0${min}` : `${min}`;\r\n\r\n  let time = `${hour}:${min}`;\r\n\r\n  if (now.getDay() !== date.getDay() || now.getDate() !== date.getDate()) {\r\n    time = `${dayOfWeek[date.getDay()]} ${time}`;\r\n  }\r\n\r\n  return time;\r\n};\r\n\r\nexport default function DialogHeader({ usersData }) {\r\n  let { dialogId } = useParams();\r\n\r\n  let usersDataFilter = usersData.filter((i) =>\r\n    i.id === +dialogId ? i.id : null\r\n  );\r\n\r\n  return (\r\n    <div>\r\n      {usersDataFilter.map((user) => (\r\n        <Header key={user.id} user={user} />\r\n      ))}\r\n    </div>\r\n  );\r\n}\r\n\r\nfunction Header({ user }) {\r\n  const lastAct = lastActivity(user.lastUserActivityDate);\r\n\r\n  return (\r\n    <div className={c.header_box}>\r\n      <div className={c.header}>\r\n        <div className={c.photo_box}>\r\n          <img className={c.photo} src={user.photos.small || userImg} alt=\"\" />\r\n        </div>\r\n        <div className={c.userInfo_box}>\r\n          <div className={c.userInfo_name}>{user.userName}</div>\r\n          <div className={c.userInfo_date}>{lastAct}</div>\r\n        </div>\r\n      </div>\r\n    </div>\r\n  );\r\n}\r\n","// extracted by mini-css-extract-plugin\nexport default {\"form_box\":\"DialogSendMessage_form_box__eMZAu\",\"form\":\"DialogSendMessage_form__NDOWU\",\"input\":\"DialogSendMessage_input__uYe6Z\",\"submit\":\"DialogSendMessage_submit__UD4IR\"};","import { Field, Form, Formik } from \"formik\";\r\nimport React from \"react\";\r\nimport { useParams } from \"react-router-dom\";\r\nimport { API } from \"../../../../API/api\";\r\nimport c from \"./DialogSendMessage.module.scss\";\r\n\r\nexport default function DialogSendMessage({ dialogData, setDialogData }) {\r\n  let { dialogId } = useParams();\r\n\r\n  let onSubmitHandler = async (values, { setSubmitting, resetForm }) => {\r\n    setSubmitting(true);\r\n    const response = await API.sendMessage(\r\n      +dialogId,\r\n      values.messageText.trim()\r\n    );\r\n\r\n    if (response.resultCode === 0) {\r\n      let copy = structuredClone(dialogData);\r\n\r\n      const response = await API.getLastSendedMessage(+dialogId);\r\n\r\n      copy.push(response.items[0]);\r\n      setDialogData(copy);\r\n    }\r\n\r\n    resetForm();\r\n    setSubmitting(false);\r\n  };\r\n\r\n  return (\r\n    <div className={c.form_box}>\r\n      <Formik initialValues={{ messageText: \"\" }} onSubmit={onSubmitHandler}>\r\n        {({ isSubmitting }) => (\r\n          <Form className={c.form}>\r\n            <Field\r\n              type=\"textarea\"\r\n              id=\"messageText\"\r\n              name=\"messageText\"\r\n              placeholder=\"Type message text\"\r\n              className={c.input}\r\n            />\r\n\r\n            <button disabled={isSubmitting} className={c.submit} type=\"submit\">\r\n              <i className=\"fa-regular fa-paper-plane\"></i>\r\n            </button>\r\n          </Form>\r\n        )}\r\n      </Formik>\r\n    </div>\r\n  );\r\n}\r\n","// extracted by mini-css-extract-plugin\nexport default {\"active_dialog\":\"MessagesActiveDialog_active_dialog__vGESy\"};","import React, { useEffect, useState } from \"react\";\r\nimport { useParams } from \"react-router-dom\";\r\nimport { API } from \"../../../API/api\";\r\nimport Preloader from \"../../common/Preloader/Preloader\";\r\nimport DialogBody from \"./DialogBody/DialogBody\";\r\nimport DialogHeader from \"./DialogHeader/DialogHeader\";\r\nimport DialogSendMessage from \"./DialogSendMessage/DialogSendMessage\";\r\nimport c from \"./MessagesActiveDialog.module.scss\";\r\n\r\nexport default function MessagesActiveDialog({ usersData, authUserData }) {\r\n  let { dialogId } = useParams();\r\n  const [dialogData, setDialogData] = useState([]);\r\n  const [isPending, setIsPending] = useState();\r\n\r\n  useEffect(() => {\r\n    if (dialogId) {\r\n      setIsPending(true);\r\n      API.getMessages(dialogId).then((data) => {\r\n        setDialogData(data.items);\r\n        setIsPending(false);\r\n      });\r\n    }\r\n  }, [dialogId]);\r\n\r\n  return (\r\n    <>\r\n      {isPending ? (\r\n        <Preloader />\r\n      ) : (\r\n        <div>\r\n          {dialogId && (\r\n            <div className={c.active_dialog}>\r\n              <DialogHeader usersData={usersData} />\r\n              <DialogBody dialogData={dialogData} authUserData={authUserData} />\r\n              <DialogSendMessage\r\n                dialogData={dialogData}\r\n                setDialogData={setDialogData}\r\n              />\r\n            </div>\r\n          )}\r\n        </div>\r\n      )}\r\n    </>\r\n  );\r\n}\r\n","// extracted by mini-css-extract-plugin\nexport default {\"dialogs\":\"MessagesDialogs_dialogs__Uo-dZ\"};","// extracted by mini-css-extract-plugin\nexport default {\"message\":\"User_message__dMCS2\",\"user\":\"User_user__UM5Ov\",\"activeUser\":\"User_activeUser__TULfc\",\"user_lastMessage\":\"User_user_lastMessage__uxcu+\",\"photo\":\"User_photo__PBYwG\",\"image\":\"User_image__bnL-L\",\"user_name\":\"User_user_name__Z+70k\",\"message__info\":\"User_message__info__f5OaX\",\"message__time\":\"User_message__time__tXURZ\",\"new__message\":\"User_new__message__tFmXs\"};","import React, { useEffect, useState } from \"react\";\r\nimport { NavLink } from \"react-router-dom\";\r\nimport { API } from \"../../../../API/api\";\r\nimport userImg from \"../../../../Assets/userImg.png\";\r\nimport c from \"./User.module.scss\";\r\n\r\nconst lastActivity = (lastUserActivityDate) => {\r\n  let now = new Date();\r\n  let date = new Date(lastUserActivityDate);\r\n\r\n  const dayOfWeek = [\"Sun\", \"Mon\", \"Tues\", \"Wed\", \"Thurs\", \"Fri\", \"Sat\"];\r\n  const months = [\r\n    \"January\",\r\n    \"February\",\r\n    \"March\",\r\n    \"April\",\r\n    \"May\",\r\n    \"June\",\r\n    \"July\",\r\n    \"August\",\r\n    \"September\",\r\n    \"October\",\r\n    \"November\",\r\n    \"December\",\r\n  ];\r\n\r\n  let hour = date.getHours() + 2;\r\n  hour = hour < 10 ? `0${hour}` : `${hour}`;\r\n\r\n  let min = date.getMinutes();\r\n  min = min < 10 ? `0${min}` : `${min}`;\r\n\r\n  let time = `${hour}:${min}`;\r\n\r\n  if (now.getDay() !== date.getDay() || now.getDate() !== date.getDate()) {\r\n    time = `${dayOfWeek[date.getDay()]}`;\r\n  }\r\n\r\n  return time;\r\n};\r\n\r\nfunction User({ item }) {\r\n  const [lastMessage, setLastMessage] = useState(\"\");\r\n\r\n  useEffect(() => {\r\n    if (item.id) {\r\n      API.getLastSendedMessage(item.id).then((data) => {\r\n        if (data.totalCount > 0) {\r\n          setLastMessage(data.items[0].body);\r\n        }\r\n      });\r\n    }\r\n  }, [item.id]);\r\n\r\n  return (\r\n    <div className={c.message}>\r\n      <NavLink\r\n        to={`/messages/${item.id}`}\r\n        className={(navData) =>\r\n          navData.isActive ? `${c.user} ${c.activeUser}` : c.user\r\n        }\r\n      >\r\n        <div className={c.photo}>\r\n          <img src={item.photos.small || userImg} className={c.image} alt=\"\" />\r\n        </div>\r\n        <div className={c.user_info}>\r\n          <div className={c.user_name}>{item.userName}</div>\r\n          <div className={c.user_lastMessage}>{lastMessage}</div>\r\n        </div>\r\n        <div className={c.message__info}>\r\n          <div className={c.message__time}>\r\n            {lastActivity(item.lastDialogActivityDate)}\r\n          </div>\r\n          {item.hasNewMessages && (\r\n            <div className={c.new__message}>{item.newMessagesCount}</div>\r\n          )}\r\n        </div>\r\n      </NavLink>\r\n    </div>\r\n  );\r\n}\r\n\r\nexport default User;\r\n","import React, { useEffect, useState } from \"react\";\r\nimport { API } from \"../../../API/api\";\r\nimport c from \"./MessagesDialogs.module.scss\";\r\nimport User from \"./User/User\";\r\n\r\nfunction MessagesDialogs({ usersData }) {\r\n  return (\r\n    <div className={c.dialogs}>\r\n      {usersData && usersData.map((item) => <User key={item.id} item={item} />)}\r\n    </div>\r\n  );\r\n}\r\n\r\nexport default MessagesDialogs;\r\n","import React, { useContext, useEffect, useState } from \"react\";\r\nimport { API } from \"../../API/api\";\r\nimport { AuthUserDataContext } from \"../../App\";\r\nimport Preloader from \"../common/Preloader/Preloader\";\r\nimport c from \"./Messages.module.scss\";\r\nimport MessagesActiveDialog from \"./MessagesActiveDialog/MessagesActiveDialog\";\r\nimport MessagesDialogs from \"./MessagesDialogs/MessagesDialogs\";\r\n\r\nfunction Messages() {\r\n  const { authUserData } = useContext(AuthUserDataContext);\r\n\r\n  const [isFetching, setIsFetching] = useState(false);\r\n  const [usersData, setUsersData] = useState([]);\r\n\r\n  useEffect(() => {\r\n    setIsFetching(true);\r\n    API.getDialogs().then((data) => {\r\n      setUsersData(data);\r\n      setIsFetching(false);\r\n    });\r\n  }, []);\r\n\r\n  return (\r\n    <>\r\n      {isFetching ? (\r\n        <Preloader />\r\n      ) : (\r\n        <div className={c.messages}>\r\n          <MessagesDialogs usersData={usersData} />\r\n          <MessagesActiveDialog\r\n            usersData={usersData}\r\n            authUserData={authUserData}\r\n          />\r\n        </div>\r\n      )}\r\n    </>\r\n  );\r\n}\r\n\r\nexport default Messages;\r\n"],"names":["MessagesBody","_ref","item","authUserData","date","Date","addedAt","hour","getHours","concat","min","getMinutes","sendedTime","_jsx","className","id","senderId","c","children","_jsxs","body","DialogBody","dialogData","newMessageRef","useRef","useEffect","current","scrollIntoView","behavior","length","map","ref","lastActivity","lastUserActivityDate","now","time","getDay","getDate","DialogHeader","usersData","dialogId","useParams","usersDataFilter","filter","i","user","Header","_ref2","lastAct","src","photos","small","userImg","alt","userName","DialogSendMessage","setDialogData","onSubmitHandler","_ref3","_asyncToGenerator","_regeneratorRuntime","mark","_callee","values","setSubmitting","resetForm","copy","_response","wrap","_context","prev","next","API","messageText","trim","sent","resultCode","structuredClone","response","push","items","stop","_x","_x2","apply","arguments","Formik","initialValues","onSubmit","_ref4","isSubmitting","Form","Field","type","name","placeholder","disabled","MessagesActiveDialog","_useState","useState","_useState2","_slicedToArray","_useState3","_useState4","isPending","setIsPending","then","data","_Fragment","Preloader","lastMessage","setLastMessage","totalCount","NavLink","to","navData","isActive","lastDialogActivityDate","hasNewMessages","newMessagesCount","User","useContext","AuthUserDataContext","isFetching","setIsFetching","setUsersData","MessagesDialogs"],"sourceRoot":""}